{"version":3,"sources":["Array.js","ListOfNumbers.js","App.js","reportWebVitals.js","index.js"],"names":["NumberTeller","array","console","log","length","Array","arrOriginal","setArr","setDispList","dispList","setArray","latestBox","useRef","className","map","num","i","TextField","id","value","variant","inputRef","autoFocus","inputProps","style","textAlign","label","onChange","e","arr","parseInt","target","changeNumber","Tooltip","title","aria-label","Fab","color","onClick","push","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","bottom","paddingTop","transition","margin","width","height","padding","spacing","ListOfNumbers","classes","Paper","zDepth","Typography","join","flexGrow","menuButton","marginRight","submitButton","marginTop","marginBottom","appBar","position","left","textDecoration","right","appBarA","fontWeight","App","useState","React","open","setOpen","handleClose","type","timeout","AppBar","Toolbar","href","Button","sa","document","getElementById","pop","sort","a","b","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.43535f08.chunk.js","sourcesContent":["import './Array.css';\nimport React, { useRef } from 'react';\nimport { TextField, Fab, Tooltip } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add' ;\n\nfunction NumberTeller( {array} ) {\n    console.log(array.length);\n    if ( array.length>1 ) {\n        return (\n            <h3> Total {array.length} numbers. </h3> \n        )\n    } else {\n        return (\n            <>\n            </>\n        )\n    }\n}\n\nfunction Array( { arrOriginal, setArr, dispList, setDispList } ) {\n\n    const array = arrOriginal;\n    const setArray = setArr;\n\n    let latestBox = useRef(null);\n\n    function changeNumber(i, e) {\n        const arr = [...array];\n        arr[i].value = parseInt(e.target.value);\n        // console.log(arr[i].value);\n        setArray(arr);\n\n    }\n    function newNumber(e) {\n        const arr = [...array];\n        if ( arr.length!==0 && arr[arr.length-1].value === null ) {\n            console.log(\"ff\");\n        } else {\n            arr.push({value:null}); \n            setArray(arr);\n        }\n    }\n    function removeNumber(i) {\n        const arr = [...array];\n        arr.splice(i,1); \n        setArray(arr);\n    }\n\n    return(\n        <div className=\"Array\">\n\n            <h1>Add Numbers to Sort</h1>\n            <br /> \n            <NumberTeller array={array} />\n            <br />\n\n            {array.map( (num,i) => {\n                    return (\n                        <TextField \n                            id = {\"num\"+i}\n                            key = {i}\n                            value={num.value || \"\" } \n                            variant=\"outlined\"\n                            className=\"number\"\n                            inputRef={latestBox}\n                            autoFocus={true}\n                            inputProps={{\n                                style: { textAlign: \"center\" }\n                            }}\n                            label={\"Number \"+(i+1)}\n                            onChange={ (e) => {\n                                setDispList(false);\n                                changeNumber(i,e);\n                            }}\n                        / >\n                    )\n                }\n            )}\n\n            <br />\n\n            <Tooltip title=\"Add a new number\" aria-label=\"add\">\n                <Fab color=\"primary\" aria-label=\"new-number\" onClick={newNumber} >\n                    <AddIcon />\n                </Fab>\n            </Tooltip>\n\n        </div>\n    )\n\n}\n\nexport default Array;","import React from 'react';\nimport {Paper, Typography} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      textAlign: 'left',\n      bottom: '0',\n      paddingTop: '3em',\n      transition: 'easeIn',\n      '& > *': {\n        margin: 'auto',\n        width: 'auto',\n        height: 'auto',\n        padding: theme.spacing(3),\n      },\n    },\n  }));\n\nfunction ListOfNumbers({array, dispList, setDispList }) {\n    const classes = useStyles();\n    if ( !dispList ) {\n        return ( <></> );\n    }\n    // setDispList(false);\n    return (\n        <div className={classes.root}>\n            {/* <Drawer PaperProps={{ elevation: 10 }}/> */}\n            <Paper variant=\"outlined\" zDepth={6} >\n                <Typography variant=\"h6\" >List of Sorted Numbers</Typography>\n                <Typography variant=\"h5\" >{array.map((num) => {return num.value} ).join(\", \")}</Typography>\n            </Paper>\n        </div>\n    )\n\n}\n\nexport default ListOfNumbers;","// import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport Array from './Array' ;\nimport ListOfNumbers from './ListOfNumbers' ;\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  submitButton: { \n    marginTop: '80px',\n    marginBottom: '100px',\n  },\n  appBar: {    \n    // background-color: #2f2f2f;\n    position: 'fixed' ,\n    width: '100%' ,\n    bottom: 0 ,\n    left: 0 ,\n    textDecoration: 'none',\n    // color: #fff ;\n    right: 0,\n  },\n  appBarA: {    \n    textDecoration: 'none',\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [array, setArray] = useState([]);\n  const [dispList, setDispList] = useState(false);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n\n    <Loader type=\"BallTriangle\" className=\"preLoader\" color=\"#00BFFF\" height={80} width={80} timeout={1000} />\n\n    <div className=\"App\">\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            AppSORT - By <a className={classes.appBarA} href=\"http://proramlogo.github.io/\">Shubh Bansal</a>\n          </Typography>\n        </Toolbar>\n      </AppBar >\n      \n      <Array arrOriginal={array} setArr={setArray} dispList={dispList} setDispList={setDispList} />\n\n      <ListOfNumbers array={array} dispList={dispList} setDispList={setDispList} />\n\n      <Button variant=\"contained\" color=\"primary\" className={classes.submitButton}\n        onClick={ () => { \n          const sa = [...array];\n          for ( var i=0 ; i<sa.length ; i++ ) {\n            if (document.getElementById(('num'+i)).value=='') {\n              setOpen(true);\n              return;\n            }\n          }\n          if (sa[sa.length-1].value == null) \n            sa.pop();\n          sa.sort( (a,b) => (a.value > b.value) ? 1 : ((b.value > a.value) ? -1 : 0) );\n          console.log(sa);\n          setArray(sa);\n          setDispList(true);\n        }}>\n        SORT!\n      </Button>      \n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Look Around!\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {\"Fill in that empty box first\"}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n    </div>\n    </>\n  );\n}\n\nexport default App ;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}